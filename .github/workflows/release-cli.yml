name: Release CLI

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main, preview]

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push' &&
      startsWith(github.event.workflow_run.head_branch, 'refs/tags/cli-v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Extract version from tag
        id: version
        run: |
          TAG_REF="${{ github.event.workflow_run.head_branch }}"
          VERSION=${TAG_REF#refs/tags/cli-v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Releasing version: $VERSION"

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          # Extract the section for this version from CHANGELOG.md
          CHANGELOG=$(awk "/^## \[$VERSION\]/{flag=1; next} /^## \[/{flag=0} flag" packages/cli/CHANGELOG.md)

          if [ -z "$CHANGELOG" ]; then
            echo "ERROR: No changelog entry found for version $VERSION in packages/cli/CHANGELOG.md"
            exit 1
          fi

          # Save to file for multiline output
          echo "$CHANGELOG" > /tmp/changelog.txt

          # Set output using delimiter
          {
            echo 'notes<<EOF'
            cat /tmp/changelog.txt
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build CLI package
        run: pnpm --filter conduit8 build

      - name: Publish to npm
        run: pnpm --filter conduit8 publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: cli-v${{ steps.version.outputs.version }}
          name: CLI v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.notes }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
